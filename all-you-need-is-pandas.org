#+TITLE: All You Need is Pandas
#+TITLE: Unexpected Success Stories
#+AUTHOR: Dimiter Naydenov
#+EMAIL: @dimitern

#+OPTIONS: num:nil
#+OPTIONS: toc:nil
#+OPTIONS: reveal_title_slide:nil
#+OPTIONS: reveal_rolling_links:nil
#+OPTIONS: reveal_keyboard:t
#+OPTIONS: reveal_overview:t
#+OPTIONS: reveal_control:t
#+OPTIONS: reveal_center:nil
#+OPTIONS: reveal_progress:nil
#+OPTIONS: reveal_width:1920
#+OPTIONS: reveal_height:1080
#+OPTIONS: reveal_history:nil
#+REVEAL_MARGIN: 0.1
#+REVEAL_MIN_SCALE: 1.0
#+REVEAL_MAX_SCALE: 2.5
#+REVEAL_THEME: sky
#+REVEAL_ROOT: reveal.js-3.6.0/
#+REVEAL_EXTRA_CSS: extra.css
#+REVEAL_TRANS: cube
#+REVEAL_SPEED: default
#+REVEAL_HLEVEL: 1
#+REVEAL_PLUGINS: (classList highlight notes zoom)
#+REVEAL_SLIDE_HEADER: <p></p>
#+REVEAL_DEFAULT_FRAG_STYLE: roll-in
#+REVEAL_DEFAULT_SLIDE_BACKGROUND_TRANSITION: slide
#+REVEAL_DEFAULT_SLIDE_BACKGROUND_SIZE: 800px
#+REVEAL_DEFAULT_SLIDE_BACKGROUND_REPEAT: no-repeat


* SVG Mail Labels Generator
#+ATTR_REVEAL: :frag (t)
   1. Capture handwritten SVG sample pages from users
   2. Process each users' samples with a multi-stage pipeline
   3. Build a reusable set of SVG letter variants per user
   4. Generate SVG mail labels using users' letter variants

** Capture Handwritten SVG Samples
:PROPERTIES:
:reveal_background: img/story1-capture.svg
:END:

*** Example Input
:PROPERTIES:
:CUSTOM_ID: input-svg
:END:

 [[./svg-sample-1.svg]]

** Processing
:PROPERTIES:
:reveal_background: ./story1-processing.svg
:reveal_background_trans: slide
:reveal_background_size: 800px
:END:


** Output


** Input: SVG handwriting sample
:PROPERTIES:
:CUSTOM_ID: input-svg
:END:

[[./svg-sample-1.svg]]

[[#split-svg][Split]]

** Process: Split all strokes to SVG paths
:PROPERTIES:
:CUSTOM_ID: split-svg
:END:

[[./svg-split-1.svg]]

[[#input-svg][Input]]

** Title

** About me

** Pandas in 1 minute or less

** Initial Frustration

** Unexpected Success Story #1
   /Problem:/ Extract characters from SVG handwriting sample page


* All You Need is Pandas
/Unexpected Success Stories/

\\
\\

Dimiter Naydenov

\\
\\

[[./img/europython-2018-logo-white-bg-small.png]]

#+BEGIN_NOTES

Hello everyone, and thanks for joining!

My name is Dimiter Naydenov, and today I'm going to talk about my experiences with
the awesome Pandas library, why I love it, and how surprisingly practical I found it to be.

Let me start by telling you a bit about myself first.

#+END_NOTES
* About me

=from Bulgaria.Sofia import Dimiter.Naydenov=

 * /loves:/ Python, Emacs, Ubuntu, Scuba Diving, Sci-Fi

 * /twitter/github:/ [[http://twitter.com/dimitern][@dimitern]]  /blog:/ [[http://blog.naydenov.net/][blog.naydenov.net]]

#+BEGIN_NOTES

I've been a developer for over 20 years, starting with Basic, going through Pascal, C++, C#,
even PHP for 3 years, before I discovering Python through Django.

Python is my favourite language, and I've used it for all kinds of projects, not just for web,
but also desktop apps, scripts, and backend services.

For 4 years I worked on a cloud deployment suite ported from Python to Go, then after that I decided
to go on my own, started a small company, and got full-time into freelancing.

#+END_NOTES

* Pandas?
#+ATTR_REVEAL: :frag appear
[[./img/many-a-pandas.jpeg]]

#+BEGIN_NOTES

So what about Pandas?

:)

#+END_NOTES

** =import pandas as pd=

 [[./img/pandas_logo.png]]

  * Open source (BSD-licensed) Python library
  * Easy-to-use, high-performance data structures
  * Great API for data analysis, built on top of [[http://www.numpy.org/][NumPy]]
  * Well documented: [[http://pandas.pydata.org/pandas-docs/stable/][pandas.pydata.org/pandas-doc/stable/]]

 #+BEGIN_NOTES

 How many of you have never used Pandas or even heard about it?

 ----if-more-than-a-few------------------------------------------------------------
 OK, so here is a quick overview.

 Pandas is an open source Python library for data analysis, built on top of NumPy,
 created by Wes McKinney in 2008.

 It is very well documented, actively supported, and has a large community of users
 and contributors.

 ----if-just-a-few-----------------------------------------------------------------
 Wow, not a lot of people, that's great! No need for an introduction then.

 #+END_NOTES

* Pandas Features I Liked
#+ATTR_REVEAL: :frag (roll-in)
 * Easy to install, very few requirements
 * Fast as NumPy, yet more flexible and nicer to use
 * Reads/writes data in the most common formats
 * Works seamlessly with [[https://matplotlib.org/][matplotlib]] for plotting

#+BEGIN_NOTES

First time I've heard about Pandas was at EuroPython 2012, and since then I keep hearing
more and more about it from many people.

Unlike NumPy, which I still find awkward and counter-intuitive to work with, Pandas is
much nicer to use, more flexible, yet still as fast as NumPy.

Reading and writing data in multiple formats, like CSV, Excel, HDF5, to name a few is
also an obvious advantage for me.

And since I think visually most of the time, I liked how easy it is produce matplotlib plots
from Pandas.

#+END_NOTES
* Personal Pain Points
#+ATTR_REVEAL: :frag (roll-in)
 * Good documentation, but a few good hands-on guides
 * Cannot "just use it", need to read a lot first
 * Indexing is confusing, even without MultiIndex
 * Can I just get my integers back, please?

#+BEGIN_NOTES

So I tried Pandas, but ultimately could not find a good use for it at the time.

#+END_NOTES
/Problem:/ Compare SVG paths
#+ATTR_REVEAL: :frag (highlight-blue)
[[./img/high-five-panda.jpg]]
Here we go

** Pandas!
:PROPERTIES:
:reveal_background: ./img/many-a-pandas.jpeg
:reveal_background_trans: convex
:reveal_background_size: 800px
:END:

* Story #1

** Problem: Extract letters from handwriting sample

** Input: Handwritten sample page (SVG)

** Parsing: Extract flat list of SVG paths for pen strokes

** Combining: Compare each stroke with all nearby candidates
   Check for:
   * overlapping paths
   * intersecting paths
**
